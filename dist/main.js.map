{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-dialog/add-dialog.component.css","webpack:///./src/app/add-dialog/add-dialog.component.html","webpack:///./src/app/add-dialog/add-dialog.component.ts","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/delete-dialog/delete-dialog.component.css","webpack:///./src/app/delete-dialog/delete-dialog.component.html","webpack:///./src/app/delete-dialog/delete-dialog.component.ts","webpack:///./src/app/edit-dialog/edit-dialog.component.css","webpack:///./src/app/edit-dialog/edit-dialog.component.html","webpack:///./src/app/edit-dialog/edit-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,oBAAoB,2BAA2B,0BAA0B,wBAAwB,KAAK,kBAAkB,oBAAoB,yBAAyB,sCAAsC,0BAA0B,sBAAsB,4BAA4B,gCAAgC,KAAK,oBAAoB,4BAA4B,wBAAwB,KAAK,aAAa,kBAAkB,wBAAwB,KAAK,C;;;;;;;;;;;ACArc,2UAA2U,yCAAyC,udAAud,6CAA6C,4rBAA4rB,2CAA2C,iuBAAiuB,4CAA4C,gvBAAgvB,qDAAqD,2iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvlG;AACQ;AACE;AACzB;AAO3C;IAOE,4BACS,SAA2C,EAAU,WAAwB,EAAS,QAAkB,EAC/E,IAAS;QADlC,cAAS,GAAT,SAAS,CAAkC;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAC/E,SAAI,GAAJ,IAAI,CAAK;QAN3C,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAM3B,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC;IAC5D,CAAC;IAEH,sCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,EAAE,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAE,CAAC;YAC1E,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAClF,mEAAmE;SAClE,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,iCAAC;aAAL,cAAU,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE9C,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAE3B,+BAA+B;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC;IA1CU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;QAUG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY,EAA2C,0DAAW,EAAmB,wDAAQ;OARtG,kBAAkB,CA4C9B;IAAD,yBAAC;CAAA;AA5C8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AAIX;AACkB;AAIlD;IAEE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YAC7B,sCAAsC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4BAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IACnD,CAAC;IAXU,UAAU;QADtB,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,UAAU,CA2BtB;IAAD,iBAAC;CAAA;AA3BsB;;;;;;;;;;;;ACTvB,6BAA6B,2BAA2B,KAAK,WAAW,2BAA2B,oBAAoB,KAAK,YAAY,kCAAkC,qBAAqB,+BAA+B,KAAK,QAAQ,2BAA2B,sBAAsB,wBAAwB,+BAA+B,KAAK,OAAO,wBAAwB,sBAAsB,oCAAoC,KAAK,wBAAwB,2BAA2B,C;;;;;;;;;;;ACAze,skBAAskB,aAAa,uBAAuB,WAAW,uBAAuB,yBAAyB,uBAAuB,0BAA0B,uBAAuB,6CAA6C,mW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxuB;AACR;AACI;AACH;AAE+B;AACM;AACT;AASvE;IAME,sBAAoB,UAAsB,EAAS,MAAiB,EAAS,QAAkB;QAA3E,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAL/F,UAAK,GAAG,cAAc,CAAC;IAK0E,CAAC;IAElG,+BAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YACtC,YAAI,CAAC,MAAM,GAAG,IAAI;QAAlB,CAAkB,CACnB;QACD,+DAA+D;IACjE,CAAC;IAED,iCAAU,GAAV,UAAW,MAAM;QACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACzC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CACvJ,CAAC;gBACC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;gBACtB,MAAM,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC9C,MAAM,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;gBACpD,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;YAC9C,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAY,GAAZ,UAAa,CAAC;QAAd,iBAcC;QAbC,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,EAAC,MAAM,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAS,GAAT;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EACL;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;oBACpB,EAAE,EAAE,MAAM,CAAC,EAAE;;gBACb,GAAC,aAAa,IAAG,MAAM,CAAC,aAAa,CAAC;gBACtC,GAAC,gBAAgB,IAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;gBACzD,GAAC,YAAY,IAAG,MAAM,CAAC,YAAY,CAAC;oBACpC,CAAC;;QAGL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAS,GAAT,UAAU,IAAY;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,6BAAM,GAAN,UAAO,IAAY;QACjB,IAAI,CAAC,IAAI,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,OAAO,GAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACzD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAlFU,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAC,CAAC,uDAAU,CAAC;SACvB,CAAC;yCAQgC,uDAAU,EAAiB,2DAAS,EAAmB,wDAAQ;OANpF,YAAY,CAoFxB;IAAD,mBAAC;CAAA;AApFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiC;AACjB;AACwB;AACvB;AACa;AACwB;AACvB;AAMP;AACL;AAEG;AACJ;AAC+B;AACM;AACT;AAiCvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,uFAAmB;gBACnB,6FAAqB;gBACrB,oFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU;gBACV,qEAAgB;gBAChB,oEAAS,CAAC,OAAO,EAAE;gBACnB,iEAAe;gBACf,qEAAmB;gBACnB,oEAAkB;gBAClB,4FAAuB;gBACvB,gEAAc;gBACd,+DAAa;gBACb,qEAAmB;aACpB;YACD,SAAS,EAAE,CAAE,wDAAU,EAAE,qEAAmB,EAAE,wDAAQ,CAAE;YACxD,eAAe,EAAE;gBACf,uFAAmB;gBACnB,6FAAqB;gBACrB,oFAAkB;aACnB;YACD,SAAS,EAAE,CAAE,2DAAY,CAAE;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpDtB,oBAAoB,2BAA2B,0BAA0B,wBAAwB,4BAA4B,KAAK,kBAAkB,oBAAoB,sBAAsB,4BAA4B,gCAAgC,qBAAqB,OAAO,oBAAoB,4BAA4B,wBAAwB,KAAK,cAAc,oBAAoB,wBAAwB,KAAK,K;;;;;;;;;;;ACAla,if;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA2D;AACM;AASjE;IAEE,+BAAmB,SAA8C,EAC/B,IAAS;QADxB,cAAS,GAAT,SAAS,CAAqC;QAC/B,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAEhD,yCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,yCAAS,GAAT;QACE,8BAA8B;QAC9B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QACzB,iBAAiB;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAlBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;QAIG,uEAAM,CAAC,iEAAe,CAAC;yCADI,8DAAY;OAF/B,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;ACVlC,oBAAoB,2BAA2B,0BAA0B,wBAAwB,qBAAqB,KAAK,kBAAkB,oBAAoB,yBAAyB,sCAAsC,0BAA0B,sBAAsB,4BAA4B,gCAAgC,KAAK,oBAAoB,4BAA4B,2BAA2B,wBAAwB,mBAAmB,KAAK,aAAa,kBAAkB,wBAAwB,KAAK,C;;;;;;;;;;;ACAxgB,iEAAiE,SAAS,iRAAiR,yCAAyC,qdAAqd,6CAA6C,2cAA2c,2CAA2C,qiBAAqiB,4CAA4C,4kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn5D;AACO;AACG;AAOpE;IAOE,6BACS,SAA4C,EAAU,WAAwB,EACrD,IAAS;QADlC,cAAS,GAAT,SAAS,CAAmC;QAAU,gBAAW,GAAX,WAAW,CAAa;QACrD,SAAI,GAAJ,IAAI,CAAK;QAN1C,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAM5B,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC;IAC5D,CAAC;IAEH,uCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,oCAAM,GAAN,UAAO,CAAQ;QACb,MAAM,CAAE,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC;IAC9C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,EAAE,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,EAAG;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,EAAG;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAE,CAAC;YAC1E,IAAI,EAAE,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAE,CAAE;SAC/G,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAC;aAAL,cAAU,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE9C,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAE3B,+BAA+B;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAlDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;QAUG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY,EAA4C,0DAAW;OAR5E,mBAAmB,CAoD/B;IAAD,0BAAC;CAAA;AApD+B;;;;;;;;;;;;;;ACThC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,EAAE,EAAE,mBAAmB,EAAE,KAAK,EAAE,CAAC;KAChF,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"p{\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n    width: 100%;\\r\\n    /* height: 400px; */\\r\\n    /* border: 1px solid black; */\\r\\n    margin-top:20%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    font-family:Georgia;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    margin:5%;\\r\\n    font-size: 25px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <p>Add new book</p>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">  \\n\\n    <div class=\\\"form-group\\\">\\n      <label>Enter book id</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"id\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.id.errors }\\\" \\n        placeholder=\\\"Enter book id\\\"\\n        [(ngModel)]=\\\"data.id\\\"\\n      />\\n      <div *ngIf=\\\"submitted && !!f.id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.id.errors.required\\\">Book id is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>What's your author?</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"author\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.author.errors }\\\" \\n        placeholder=\\\"Enter author name\\\"\\n        [(ngModel)]=\\\"data['Author Name']\\\"\\n      />\\n      <div *ngIf=\\\"submitted && !!f.author.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.author.errors.required\\\">Author name is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>What's the published date?</label>\\n      <input \\n            matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" \\n            \\n            [(ngModel)]=\\\"data['Published Date']\\\"\\n            [max]=\\\"maxDate\\\"\\n            [min]=\\\"minDate\\\"\\n            formControlName=\\\"date\\\" \\n            class=\\\"form-control\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.date.errors }\\\"\\n      >\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n      <div *ngIf=\\\"submitted && !!f.date.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.date.errors.required\\\">Published date is required</div>\\n          <div *ngIf=\\\"!!f.date.errors.min && !!f.date.errors.max\\\">Published date is out</div>\\n          <div *ngIf=\\\"!!f.date.errors.minlength\\\">Published date is short</div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\">What's your book title?</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"title\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" \\n        [(ngModel)]=\\\"data['Book Title']\\\"\\n        placeholder=\\\"Enter book title\\\"\\n      >\\n        <div *ngIf=\\\"submitted && !!f.title.errors\\\" class=\\\"invalid-feedback\\\" >\\n            <div *ngIf=\\\"!!f.title.errors.required\\\">Book title is required</div>\\n        </div> \\n    </div>\\n  </form>    \\n  \\n  <div class=\\\"buttons\\\">\\n    <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n    <button class=\\\"btn btn-basic btn-lg\\\" (click)=\\\"onCloseNo()\\\">Cancel</button>\\n  </div>\\n</div>\\n  \\n  <!-- <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f['Author Name'].errors }\\\" />\\n        <div *ngIf=\\\"submitted && f['Author Name'].errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f['Author Name'].errors.required\\\">Email is required</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Register</button>\\n    </div>  \\n  </form> -->\\n\\n\\n  <!-- <div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onCloseNo()\\\">Cancel</button>\\n    <button mat-button (click)=\\\"onCloseOk()\\\" [disabled]=\\\"author.errors\\\">Save</button>\\n  </div> -->\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-dialog',\n  templateUrl: './add-dialog.component.html',\n  styleUrls: ['./add-dialog.component.css']\n})\nexport class AddDialogComponent implements OnInit {\n  CloneData: any;\n  registerForm: FormGroup;\n  submitted = false;\n  maxDate = new Date(2020, 0, 1);\n  minDate = new Date(1810, 0, 1);\n\n  constructor(\n    public dialogRef: MatDialogRef<AddDialogComponent>, private formBuilder: FormBuilder, public datepipe: DatePipe,\n    @Inject(MAT_DIALOG_DATA) public data: any)\n    {\n      this.CloneData = data, console.log(\"the data \", this.data)\n    }\n    \n  onCloseNo(): void {\n    console.log(\"clicked cancel\")\n    this.dialogRef.close(null);\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      author: ['', Validators.required],\n      title: ['', [ Validators.required, Validators.pattern('^[a-z0-9A-Z ]+') ]],\n      date: ['', [Validators.required, Validators.minLength(4), Validators.min(1800)]]\n    //   password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(\"clicked save\")\n    \n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n\n    this.dialogRef.close(this.data);\n    alert('SUCCESS!!')\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable, pipe } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport 'rxjs/add/observable/of';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private http: HttpClient ) {        \n    this.getJSON().subscribe(data => {\n    // this.getPosts().subscribe(data => {\n     console.log(data)\n    });\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(\"./assets/data/books.json\");\n  }\n\n  // getPosts() {\n  //   const postsURL = \"https://jsonplaceholder.typicode.com/posts\";\n  //   return this.http\n  //     .get(postsURL)\n  //     .pipe(\n  //       map((response: Response) => {\n  //         console.log(response)\n  //         return response;\n  //       }),\n  //       catchError(error => Observable.of(null))\n  //     ); \n      \n  // }\n\n}\n","module.exports = \".container{\\r\\n    text-align: center;\\r\\n}\\r\\nbutton{\\r\\n    text-align: center;\\r\\n    margin: 5px;\\r\\n}\\r\\n.table {\\r\\n    border-collapse: collapse;\\r\\n    margin: 15px;\\r\\n    border: 1px solid grey;\\r\\n}\\r\\ntd {\\r\\n    text-align: center;\\r\\n    padding: 10px;\\r\\n    font-size: 25px;\\r\\n    border: 1px solid gray;\\r\\n}\\r\\nth{\\r\\n    font-size: 30px;\\r\\n    padding: 15px;\\r\\n    border: 1px solid gainsboro;\\r\\n}\\r\\ntr:nth-child(even) {background-color: #f2f2f2;}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"text-center\\\">ID</th>\\n          <th class=\\\"text-center\\\">Author Name</th>\\n          <th class=\\\"text-center\\\">Published Date</th>\\n          <th class=\\\"text-center\\\">Book Title</th>\\n          <th class=\\\"text-center\\\"><button mat-raised-button class=\\\"btn btn-success\\\" (click)=\\\"addDialog()\\\"><mat-icon>add</mat-icon></button></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let folder of mydata?.books; let i=index;\\\">\\n\\n          <td>{{folder.id}}</td>\\n          <td>{{folder[\\\"Author Name\\\"]}}</td>\\n          <td>{{folder['Published Date']}}</td>\\n          <td>{{removeReg(folder['Book Title']) | titlecase}}</td>\\n          <button mat-raised-button class=\\\"btn btn-primary\\\" (click)=\\\"editDialog(folder)\\\"><mat-icon>edit</mat-icon></button>          \\n          <button mat-raised-button class=\\\"btn btn-danger\\\" (click)=\\\"deleteDialog(i)\\\"><mat-icon>delete</mat-icon></button>\\n          </tr>\\n          \\n        </tbody>\\n\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from \"./api.service\"\nimport { MatDialog } from '@angular/material';\nimport { DatePipe } from '@angular/common';\n\nimport { EditDialogComponent } from './edit-dialog/edit-dialog.component';\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\nimport { AddDialogComponent } from './add-dialog/add-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers:[ApiService]\n})\n\nexport class AppComponent implements OnInit{\n  title = 'book library';\n  mydata: any;\n  index: number;\n  date: any;\n\n  constructor(private apiSerivce: ApiService, public dialog: MatDialog, public datepipe: DatePipe){}\n\n  ngOnInit(): void{\n    this.apiSerivce.getJSON().subscribe(data => \n      this.mydata = data\n    )\n    // this.mydata = JSON.parse(localStorage.getItem('key')) || [];\n  }\n\n  editDialog(folder): void {\n    console.log(folder)\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      width: '350px',\n      height: '620px',\n      data: JSON.parse(JSON.stringify(folder))\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if ((result != null) && (result.id != null) && (result['Author Name'] != null) && (result['Published Date'] != null) && (result['Book Title'] != null)) \n      {\n        folder.id = result.id;\n        folder['Author Name'] = result['Author Name'];\n        folder['Published Date'] = result['Published Date'];\n        folder['Book Title'] = result['Book Title'];\n      }\n\n      console.log('The dialog was closed');\n    });\n  }\n\n  deleteDialog(i): void {\n    this.index=i;\n    console.log(i)\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      width: '320px',\n      height: '400px'\n    });\n    \n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.mydata.books.splice(i, 0);\n      }\n      console.log('The dialog was closed');\n    });\n  }\n\n  addDialog(): void {\n    console.log(\"index: \", this.mydata.books.length+1);\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      width: '350px',\n      height: '650px',\n      data: {\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.mydata.books.push({\n        id: result.id,\n        ['Author Name']: result['Author Name'],\n        ['Published Date']: this.mydate(result['Published Date']),\n        ['Book Title']: result['Book Title'],\n      });\n\n\n    });\n  }\n\n  removeReg(word: string) {\n    if (!word) return word;\n      return word.replace(/[|&/:;$%@#^-_=\"*!.`~<>()+,]/g, '');\n  }\n\n  mydate(word: string) {\n    this.date=new Date(word);\n    let newdate =this.datepipe.transform(word, 'dd/MM/yyyy');\n    return newdate;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule, \n  MatDatepickerModule, \n  MatInputModule, \n  MatIconModule, \n  MatFormFieldModule,\n  MatNativeDateModule } from '@angular/material';\n  import { DatePipe } from '@angular/common'\n\nimport { AppComponent } from './app.component';\nimport { ApiService } from './api.service';\nimport { EditDialogComponent } from './edit-dialog/edit-dialog.component';\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\nimport { AddDialogComponent } from './add-dialog/add-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditDialogComponent,\n    DeleteDialogComponent,\n    AddDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    MatNativeDateModule \n  ],\n  providers: [ ApiService, MatDatepickerModule, DatePipe ],\n  entryComponents: [\n    EditDialogComponent,\n    DeleteDialogComponent,\n    AddDialogComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","module.exports = \"p{\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    font-size: 30px;\\r\\n    margin-bottom: 60px;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin: 17px;\\r\\n  }\\r\\n\\r\\n.container {\\r\\n    font-family:Georgia;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    margin: 10%;\\r\\n    font-size: 25px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <p>\\n    Are you want to delete this book?\\n  </p>\\n  <div>\\n    <div mat-dialog-actions class=\\\"col-md-12 text-right\\\">\\n      <div class=\\\"buttons\\\">\\n\\n        <button mat-raised-button class=\\\"btn btn-primary btn-lg\\\" type=\\\"button\\\" (click)=\\\"onCloseOk()\\\">Ok</button>\\n        <button mat-raised-button class=\\\"btn btn-basic btn-lg\\\" type=\\\"button\\\" (click)=\\\"onCloseNo()\\\">Cancel</button>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject  } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Action, Store } from \"@ngrx/store\";\n\n\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.css']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n  \n  onCloseNo(): void {\n    console.log(\"clicked cancel\")\n    this.dialogRef.close(false);\n  }\n\n  onCloseOk(): void {\n    // console.log(this.CloneData)\n    console.log(\"clicked OK\")\n    // alert(\"alert\")\n    this.dialogRef.close(true);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p{\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    font-size: 30px;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n    width: 100%;\\r\\n    /* height: 400px; */\\r\\n    /* border: 1px solid black; */\\r\\n    margin-top:20%;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    font-family:Georgia;\\r\\n    text-align: center;\\r\\n    font-size: 20px;\\r\\n    margin: 5%;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    margin:5%;\\r\\n    font-size: 25px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  \\n  <p>Book id: {{data.id}}</p>\\n  \\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">  \\n\\n    <div class=\\\"form-group\\\">\\n      <label>Edit book id:</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"id\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.id.errors }\\\" \\n        placeholder=\\\"Enter book id\\\"\\n        [(ngModel)]=\\\"data.id\\\"\\n      />\\n      <div *ngIf=\\\"submitted && !!f.id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.id.errors.required\\\">Book id is required</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Edit author name:</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"author\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.author.errors }\\\" \\n        [(ngModel)]=\\\"data['Author Name']\\\"\\n      />\\n      <div *ngIf=\\\"submitted && !!f.author.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.author.errors.required\\\">Author name is required</div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label>Edit published date:</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"date\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.date.errors }\\\" \\n        [(ngModel)]=\\\"data['Published Date']\\\"\\n      >\\n\\n      <div *ngIf=\\\"submitted && !!f.date.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"!!f.date.errors.required\\\">Published date is required</div>\\n          <div *ngIf=\\\"!!f.date.errors.pattern\\\">Published date is wrong</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\">Edit book title:</label>\\n      <input \\n        type=\\\"text\\\" \\n        formControlName=\\\"title\\\" \\n        class=\\\"form-control\\\" \\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" \\n        [(ngModel)]=\\\"data['Book Title']\\\"\\n      />\\n        <div *ngIf=\\\"submitted && !!f.title.errors\\\" class=\\\"invalid-feedback\\\" >\\n            <div *ngIf=\\\"!!f.title.errors.required\\\">Book title is required</div>\\n            <div *ngIf=\\\"!!f.title.errors.pattern\\\">Book title can contain only letters or numbers</div>\\n        </div> \\n    </div>\\n  </form>    \\n\\n  <div class=\\\"buttons\\\">\\n    <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n    <button class=\\\"btn btn-basic btn-lg\\\" (click)=\\\"onCloseNo()\\\">Cancel</button>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-dialog',\n  templateUrl: './edit-dialog.component.html',\n  styleUrls: ['./edit-dialog.component.css']\n})\nexport class EditDialogComponent implements OnInit {\n   CloneData: any;\n   registerForm: FormGroup;\n   submitted = false;\n   maxDate = new Date(2020, 0, 1);\n   minDate = new Date(1810, 0, 1);\n\n  constructor(\n    public dialogRef: MatDialogRef<EditDialogComponent>, private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any)\n    {\n      this.CloneData = data, console.log(\"the data \", this.data)\n    }\n    \n  onCloseNo(): void {\n    console.log(\"clicked cancel\")\n    console.log(this.data)\n    this.dialogRef.close(null);\n  }\n\n  onCloseOk(): void {\n    console.log(\"clicked save\")\n    this.dialogRef.close(this.CloneData);\n  }\n\n  update(e: Event) {\n    return (e.target as HTMLInputElement).value;\n  }\n  \n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      id: ['', Validators.required, ],\n      author: ['', Validators.required, ],\n      title: ['', [ Validators.required, Validators.pattern('^[a-z0-9A-Z ]+') ]],\n      date: ['', [ Validators.required, Validators.pattern('[0-9][0-9][./-][0-9][0-9][./-][1-9][0-9][0-9][0-9]') ] ]\n    });\n  }\n  \n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(\"clicked save\")\n    \n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    console.log(this.data)\n    this.dialogRef.close(this.data);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: false })\n  .catch(err => console.log(err));\n "],"sourceRoot":""}